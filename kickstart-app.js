// Generated by CoffeeScript 1.8.0
(function() {
  var require_optional;

  require_optional = function(modulename, defaults) {
    var e;
    if (defaults == null) {
      defaults = {};
    }
    try {
      return require(modulename);
    } catch (_error) {
      e = _error;
      return defaults;
    }
  };

  module.exports = function(options) {
    var bunyan, env, log, nconf, path, pkginfo, runtimeEnvironment, _, _ref;
    _ = options._, pkginfo = options.pkginfo;
    runtimeEnvironment = (_ref = process.env.NODE_ENV) != null ? _ref : 'development';
    path = require('path');
    nconf = require('nconf');
    nconf.argv().file({
      file: path.join(options.baseDir, "config/" + runtimeEnvironment + ".json")
    }).env().defaults(_.extend({
      PORT: 3000,
      NODE_ENV: 'development'
    }, require_optional(path.join(options.baseDir, 'config/defaults')), require_optional(path.join(options.baseDir, "config/" + runtimeEnvironment))));
    bunyan = require('bunyan');
    log = bunyan.createLogger({
      name: "" + pkginfo.name + " " + pkginfo.version,
      serializers: bunyan.stdSerializers
    });
    log.info({
      name: pkginfo.name,
      version: pkginfo.version,
      node_env: nconf.get('NODE_ENV')
    }, "Application started");
    (require('exit-hook'))(function() {
      return log.info({
        name: pkginfo.name,
        version: pkginfo.version,
        uptime: process.uptime()
      }, 'Application terminating.');
    });
    process.on('uncaughtException', function(err) {
      console.log('uncaughtException ' + JSON.stringify(err));
      return log.fatal({
        err: err
      }, 'uncaughtException');
    });
    return env = {
      nconf: nconf,
      bunyan: bunyan,
      log: log
    };
  };

}).call(this);
